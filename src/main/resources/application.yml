spring:
  application:
    name: transfers-realization-service
  profiles:
    active: production
  kafka:
    consumer:
      bootstrap-servers: localhost:9092
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      group-id: ${spring.application.name}
      properties:
        spring.json.trusted.packages: "com.commons"
management:
  endpoints:
    web:
      exposure:
        include: '*'
eureka:
  client:
    fetchRegistry: true
    serviceUrl:
      defaultZone=http://localhost:8761/eureka/:
server:
  port: 9991



#
#spring:
#  application:
#    name: transfers-realization-service
#  profiles:
#    active: production
#  kafka:
#    consumer:
#      bootstrap-servers: localhost:9092
#      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
#      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
#      group-id: ${spring.application.name}
#      properties:
#        spring.json.truded.packages: "*"
#        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
#        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
#
#management:
#  endpoints:
#    web:
#      exposure:
#        include: '*'
#eureka:
#  client:
#    fetchRegistry: true
#    serviceUrl:
#      defaultZone=http://localhost:8761/eureka/:
#server:
#  port: 9991

#  essageListenerContainer$ListenerConsumer : Consumer exception /  This error handler cannot process 'SerializationException's directly; please consider configuring an 'ErrorHandlingDeserializer' in the value and/or key deserializer
